@model sqlupdate.Models.ViewModel


@{
    ViewBag.Title = "Home Page";
    ViewBag.Label = "";
}

<div class="col-ld-12 body">
    <div class="col-md-2 leftPane">
        <h3>Forms</h3>
        <div class="formButtons">
            <button class="bActive" type="button">Add new donor</button>
            <button type="button">Add new income</button>
            <button type="button">Add new expense</button>
        </div>
        <hr>
        <h3>Report</h3>
        <div class="formButtons">
            <button type="button">Monthly Report</button>
            <button type="button">Yearly Report</button>
            <button type="button">Tax Certificate</button>
            <button type="button">Monthly Expenses</button>
            <button type="button">Yearly Expenses</button>
            <button type="button">Purpose Totals</button>
            <button type="button">List of donors</button>
            <button type="button">List table values</button>
        </div>
        
    </div>
    <div class="col-md-10 main">
        <div class="content">
            <div class="content_inside content_inside_active col-md-12">
                <h2>Add new donor</h2>
                <form method="post" action="~/Home/Donor">
                    <div class="col-md-12 name">
                        @Html.LabelFor(model => model.donor.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.donor.name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.donor.name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12 email">
                        @Html.LabelFor(model => model.donor.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.donor.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.donor.email, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12 address">
                        @Html.LabelFor(model => model.donor.address, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.donor.address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.donor.address, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12 dob">
                        @Html.LabelFor(model => model.donor.dateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.donor.dateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.donor.dateOfBirth, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12 mobile">
                        @Html.LabelFor(model => model.donor.mobilePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.donor.mobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.donor.mobilePhone, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12 home">
                        @Html.LabelFor(model => model.donor.homePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.donor.homePhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.donor.homePhone, "", new { @class = "text-danger" })
                    </div>
                    <input type="submit" value="Create" class="btn btn-default" />
                </form>
            </div>
            <div class="content_inside col-md-12">
                <div class="col-md-3 typePane">
                    <h4>Add New Income</h4>
                    <br>
                    <label>Income Type</label>
                    <div class="donationType">
                        <button class="typeActive" type="button">Cash</button>
                        <button type="button">Envelope</button>
                        <button type="button">Online</button>
                    </div>
                </div>
                <div class="col-md-9 main">
                    <div class="formContent">
                        <div class="formContent_inside formContent_inside_active col-md-12">
                            <h3>New Cash Income</h3>
                            <form method="post" action="~/Home/Cash">
                                <div class="col-md-12 cashAmount">
                                    @Html.LabelFor(model => model.donation.amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.ValidationMessageFor(model => model.donation.amount, "", new { @class = "text-danger" })
                                    <input class="form-control" type="text" name="amount">
                                </div>
                                <div class="col-md-12 cashAmount">
                                    @Html.LabelFor(model => model.donation.date, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <input class="form-control" type="date" id="donationDate" name="date" min="01/01/2021" max="30/12/2021">
                                </div>
                                <input type="submit" value="Add" class="btn btn-default" />
                            </form>
                        </div>
                        <div class="formContent_inside col-md-12">
                            <h3>New Envelope Donation</h3>
                            <h4>Please enter in the donor's ID or name first</h4>
                            <form method="post" action="~/Home/SearchDonorName">
                                <div class="col-md-12 findByID">
                                    <label class="control-label col-md-2">Donor ID/No:</label>
                                    @Html.EditorFor(model => model.donor.ID, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <input type="submit" value="Search" class="btn btn-default" />
                            </form>
                            <hr />
                            <form method="post" action="~/Home/SearchDonorName">
                                <div class="col-md-12 findByName">
                                    <label class="control-label col-md-2">Donor Name:</label>
                                    @Html.EditorFor(model => model.donor.name, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <input type="submit" value="Search" class="btn btn-default" />
                            </form>
                        </div>
                        <div class="formContent_inside col-md-12">
                            <h3>New Online Income Donation</h3>
                            <h4>Please enter in the donor's ID or name first</h4>
                            <form method="post" action="~/Home/SearchDonorNameOnline">
                                <div class="col-md-12 findByID">
                                    <label class="control-label col-md-2">Donor ID/No:</label>
                                    @Html.EditorFor(model => model.donor.ID, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <input type="submit" value="Search" class="btn btn-default" />
                            </form>
                            <hr />
                            <form method="post" action="~/Home/SearchDonorNameOnline">
                                <div class="col-md-12 findByName">
                                    <label class="control-label col-md-2">Donor Name:</label>
                                    @Html.EditorFor(model => model.donor.name, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <input type="submit" value="Search" class="btn btn-default" />
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="content_inside col-md-12">
                <h2>Expenditure Form</h2>
                <form method="post" action="~/Home/Expenditure">
                    <div class="col-md-12 expendDate">
                        <input class="form-control" type="date" id="start" name="date" value="03/09/2021" min="01/01/2021" max="30/12/2021">
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-12 category">
                            <label class="control-label col-md-2">Category</label>
                            <select class="form-control" name="category" id="category" onchange="configureDropDownLists(this,document.getElementById('subcategory'))">
                                <option value="Bank">Funds</option>
                                <option value="Missions">Missions</option>
                                <option value="Names">Names</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-12 category">
                            <label class="control-label col-md-2">Sub-Category</label>
                            <select class="form-control" name="subcategory" id="subcategory">
                                <option value="Food">Food</option>
                                <option value="Option">optio</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12 amount">
                        @Html.LabelFor(model => model.expenditure.amount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <input class="col-md-4 form-control" type="text" name="amount">
                    </div>
                    <div class="col-md-12 reference">
                        @Html.LabelFor(model => model.expenditure.invoiceReference, htmlAttributes: new { @class = "control-label col-md-2" })
                        <input class="col-md-4 form-control" type="text" name="invoiceRef">
                    </div>
                    <div class="col-md-12 notes">
                        @Html.LabelFor(model => model.expenditure.notes, htmlAttributes: new { @class = "control-label col-md-2" })
                        <input class="col-md-4 form-control" type="text" name="notes">
                    </div>
                    <input type="submit" value="Add" class="btn btn-default" />
                </form>
            </div>
            <div class="content_inside col-md-12">
                <h2>Monthly Donations Report</h2>
                <h3>Please select the month and year you want to see the income for.</h3>
                <form method="post" action="~/Home/Monthly">
                    <div class="col-md-12 findByID">
                        <select class="form-control" name="month" id="month">
                            <option value="1">January</option>
                            <option value="2">February</option>
                            <option value="3">March</option>
                            <option value="4">April</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">August</option>
                            <option value="9">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>
                    </div>
                    <div class="col-md-12 findByID">
                        <label class="col-md-1">Year </label>
                        <input class="form-control" type="text" name="year">
                    </div>
                    <input type="submit" value="Generate Report" class="btn btn-default" />
                </form>
            </div>
            <div class="content_inside col-md-12">
                <h2>Yearly Donations Report</h2>
                <h3>Please select the year you want to see the income for.</h3>
                <form method="post" action="~/Home/Yearly">
                    <div class="col-md-12 findByID">
                        <label class="col-md-1">Year </label>
                        <input class="form-control" type="text" name="year">
                    </div>
                    <input type="submit" value="Generate Report" class="btn btn-default" />
                </form>
            </div>
            <div class="content_inside col-md-12">
                <h2>Donor Tax Certificate</h2>
                <h3>Please enter in the donor's ID or name and the year of donations you want to get</h3>
                <form method="post" action="~/Home/TaxCertificate">
                    <div class="col-md-12 findByID">
                        <label class="control-label col-md-2">Donor ID/No:</label>
                        @Html.EditorFor(model => model.donor.ID, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-12 findByName">
                        <label class="col-md-2">Year </label>
                        <input class="form-control" type="text" name="year" />
                    </div>
                    <input type="submit" value="Search" class="btn btn-default" />
                </form>
                <hr />
                <form method="post" action="~/Home/TaxCertificate">
                    <div class="col-md-12 findByName">
                        <label class="control-label col-md-2">Donor Name:</label>
                        @Html.EditorFor(model => model.donor.name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-12 findByName">
                        <label class="col-md-2">Year </label>
                        <input class="form-control" type="text" name="year" />
                    </div>
                    <input type="submit" value="Search" class="btn btn-default" />
                </form>
            </div>
            <div class="content_inside col-md-12">
                <h2>Monthly Expenses Report</h2>
                <h3>Please select the month you want to see the total expenses for.</h3>
                <form method="post" action="~/Home/ExMonthly">
                    <div class="col-md-12 findByID">
                        <select class="form-control" name="month" id="month">
                            <option value="1">January</option>
                            <option value="2">February</option>
                            <option value="3">March</option>
                            <option value="4">April</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">August</option>
                            <option value="9">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>
                    </div>
                    <div class="col-md-12 findByID">
                        <label class="col-md-1">Year </label>
                        <input class="form-control" type="text" name="year">
                    </div>
                    <input type="submit" value="Generate Report" class="btn btn-default" />
                </form>
            </div>
            <div class="content_inside col-md-12">
                <h2>Yearly Expenses Report</h2>
                <h3>Please select the year you want to see the income for.</h3>
                <form method="post" action="~/Home/ExYearly">
                    <div class="col-md-12 findByID">
                        <label class="col-md-1">Year </label>
                        <input class="form-control" type="text" name="year">
                    </div>
                    <input type="submit" value="Generate Report" class="btn btn-default" />
                </form>
            </div>
            <div class="content_inside col-md-12">
                <h2>Purpose Totals</h2>
                <h3>Please select a purpose to view the total amount for.</h3>
                <form method="post" action="~/Home/PurposeTotal">
                    <div class="col-md-12 findByID">
                        <select class="col-md-12 form-control" name="purpose">
                            <option value="bank">bank</option>
                            <option value="misson">mission</option>
                        </select>
                    </div>
                    <input type="submit" value="Generate total" class="btn btn-default" />
                </form>
            </div>
            <div class="content_inside col-md-12">
                <h2>Donor report</h2>
                <h3>Please click the button below to generate the list of current donors</h3>
                <form action="~/Home/DonorList">
                    <div class="col-md-12 findByID">
                        <input type="submit" value="Generate" class="btn btn-default" />
                    </div>
                </form>
            </div>
            <div class="content_inside col-md-12">
                <h2>Lists</h2>
                <h3>This report will generate all the purposes, categories or subcategories depending on the option selected.</h3>
                <h4>Purposes are all the purposes available for envelopes and online transactions</h4>
                <h4>Category and sub-category are all the categories expenses fall under</h4>
                <form action="~/Home/ViewList">
                    <div class="col-md-12 findByID">
                        <select class="form-control" name="viewList" id="list">
                            <option value="Purposes">Purposes</option>
                            <option value="Category">Categories</option>
                            <option value="SubCategory">Sub-categories</option>
                        </select>
                    </div>
                    <input type="submit" value="Generate" class="btn btn-default" />
                </form>
            </div>
        </div>
    </div>
    <br>
</div>

<style>
    .body {
        padding: 5px;
    }

    .leftPane {
        text-align: center;
        border-radius: 25px;
        background-color: #91e4fb;
        border: 0.1px solid #91e4fb;
    }

        .leftPane h3 {
            text-align: center;
            margin-top: 10px;
        }

        .leftPane button {
            width: 70%;
            height: 26px;
            margin-bottom: 10px;
        }

        .leftPane p {
            margin-bottom: 2px;
        }

        .leftPane hr {
            margin-top: 10px;
            margin-bottom: 5px;
        }

    .typePane {
        text-align: center;
        border-radius: 25px;
        background-color: #91e4fb;
        border: 0.1px solid #91e4fb;
    }

        .typePane h4 {
            text-align: center;
            color: black;
            margin-top: 10px;
            margin-bottom: 0px;
        }

        .typePane button {
            width: 70%;
            height: 26px;
            margin-bottom: 10px;
        }

        .typePane p {
            margin-bottom: 2px;
        }

        .typePane hr {
            margin-top: 10px;
            margin-bottom: 5px;
        }

    .main {
        text-align: center;
        border-radius: 25px;
        border: 1px solid #000000;
        margin-top: 3px;
    }

    #start, #query {
        width: 70%;
        height: 26px;
    }

    #end {
        width: 70%;
        height: 26px;
        margin-bottom: 10px;
    }

    .formButtons button {
        margin: 10px;
        cursor: pointer;
    }

    .bActive {
        color: teal;
    }

    .content_inside {
        display: none;
        padding: 10px;
    }

    .content_inside_active {
        display: block;
    }

    .donationType button {
        margin: 10px;
        cursor: pointer;
    }

    .typeActive {
        color: teal;
    }

    .formContent_inside {
        display: none;
        padding: 10px;
    }

    .formContent_inside_active {
        display: block;
    }

    .name, .email, .address, .dob, .mobile, .home {
        margin-top: 20px;
        margin-bottom: 20px;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }

    .expendDate, .category, .categorycode, .subcategory, .subcategorycode, .amount, .reference, .notes {
        margin-top: 20px;
        margin-bottom: 20px;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }

    .cashAmount, .findByID, .findByName {
        margin-top: 20px;
        margin-bottom: 20px;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }

    #donationDate {
        width: 70%;
    }

    #ePurpose {
        height: 26px;
    }

    #oPurpose {
        height: 26px;
    }

    .purpose {
        margin-top: 20px;
    }

    #newPurposeBtn {
        padding-bottom: 10px;
        padding-top: 10px;
        text-align: center;
    }
</style>
<script>
    let button = document.querySelectorAll('.formButtons button');
    let content_inside = document.querySelectorAll('.content_inside');

    Array.from(button).forEach(function (buttonArray, i) {
        buttonArray.addEventListener('click', function () {

            Array.from(button).forEach(buttonAll => buttonAll.classList.remove('bActive'));

            Array.from(content_inside).forEach(content_insideAll => content_insideAll.classList.remove('content_inside_active'));

            button[i].classList.add('bActive');

            content_inside[i].classList.add('content_inside_active');
        });
    });

    let formButton = document.querySelectorAll('.donationType button');
    let formContent_inside = document.querySelectorAll('.formContent_inside');

    Array.from(formButton).forEach(function (buttonArrayy, i) {
        buttonArrayy.addEventListener('click', function () {

            Array.from(formButton).forEach(buttonAll => buttonAll.classList.remove('typeActive'));

            Array.from(formContent_inside).forEach(content_insideAlll => content_insideAlll.classList.remove('formContent_inside_active'));

            formButton[i].classList.add('typeActive');

            formContent_inside[i].classList.add('formContent_inside_active');
        });
    });

    document.getElementById("newPurposeBtn").onclick = function () {
        var container = document.getElementById("oContainer");
        var section = document.getElementById("oSection");
        container.appendChild(section.cloneNode(true));
    };

    function configureDropDownLists(category, subcategory) {
        var bank = ['Food', 'Option'];
        var missions = ['Mens', 'Womens', 'Children'];
        var names = ['John', 'David', 'Sarah'];

        switch (category.value) {
            case 'Bank':
                subcategory.options.length = 0;
                for (i = 0; i < bank.length; i++) {
                    createOption(subcategory, bank[i], bank[i]);
                }
                break;
            case 'Missions':
                subcategory.options.length = 0;
                for (i = 0; i < missions.length; i++) {
                    createOption(subcategory, missions[i], missions[i]);
                }
                break;
            case 'Names':
                subcategory.options.length = 0;
                for (i = 0; i < names.length; i++) {
                    createOption(subcategory, names[i], names[i]);
                }
                break;
            default:
                subcategory.options.length = 0;
                break;
        }

    }

    function createOption(category, text, value) {
        var opt = document.createElement('option');
        opt.value = value;
        opt.text = text;
        category.options.add(opt);
    }
</script>